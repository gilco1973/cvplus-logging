import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Eye, EyeOff } from 'lucide-react';
export const LogEntryItem = ({ log, isSelected, isExpanded, config, onSelect, onToggleExpansion, getLogLevelColor, formatTimestamp }) => {
    return (_jsx("div", { className: `border rounded-lg p-4 hover:bg-gray-50 cursor-pointer ${isSelected ? 'bg-blue-50 border-blue-200' : 'bg-white border-gray-200'}`, onClick: onSelect, children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1 min-w-0", children: [_jsxs("div", { className: "flex items-center gap-3 mb-2", children: [_jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getLogLevelColor(log.level)}`, children: log.level.toUpperCase() }), _jsx("span", { className: "text-xs text-gray-500", children: formatTimestamp(log.timestamp) }), _jsx("span", { className: "text-xs text-gray-600 bg-gray-100 px-2 py-0.5 rounded", children: log.service || 'unknown' }), log.correlationId && (_jsxs("span", { className: "text-xs text-purple-600 bg-purple-100 px-2 py-0.5 rounded", children: [log.correlationId.substring(0, 8), "..."] }))] }), _jsx("p", { className: `text-sm text-gray-900 ${config.compactMode ? 'truncate' : ''}`, children: log.message }), isExpanded && (_jsxs("div", { className: "mt-3 pt-3 border-t border-gray-200", children: [log.context && (_jsxs("div", { className: "mb-3", children: [_jsx("h4", { className: "text-xs font-medium text-gray-700 mb-2", children: "Context" }), _jsx("pre", { className: "text-xs text-gray-600 bg-gray-50 rounded p-2 overflow-x-auto", children: JSON.stringify(log.context, null, 2) })] })), _jsxs("div", { className: "grid grid-cols-2 gap-4 text-xs text-gray-600", children: [_jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Domain:" }), " ", log.domain] }), _jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "User ID:" }), " ", log.userId || 'N/A'] }), _jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Log ID:" }), " ", log.id] }), _jsxs("div", { children: [_jsx("span", { className: "font-medium", children: "Correlation ID:" }), " ", log.correlationId || 'N/A'] })] })] }))] }), _jsx("button", { onClick: (e) => {
                        e.stopPropagation();
                        onToggleExpansion();
                    }, className: "ml-2 p-1 text-gray-400 hover:text-gray-600", children: isExpanded ? (_jsx(EyeOff, { className: "w-4 h-4" })) : (_jsx(Eye, { className: "w-4 h-4" })) })] }) }));
};
//# sourceMappingURL=LogEntryItem.js.map