import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Play, Pause, RefreshCw, Download, AlertCircle } from 'lucide-react';
export const LogsViewerHeader = ({ state, config, onRefresh, onStreamToggle, onExport, onError }) => {
    return (_jsxs("div", { className: "flex-shrink-0 border-b border-gray-200 bg-white px-6 py-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("h1", { className: "text-xl font-semibold text-gray-900", children: "Log Viewer" }), _jsxs("div", { className: "flex items-center gap-2", children: [state.streaming && (_jsxs("div", { className: "flex items-center gap-1 text-green-600", children: [_jsx("div", { className: "w-2 h-2 bg-green-500 rounded-full animate-pulse" }), _jsx("span", { className: "text-sm", children: "Live" })] })), state.loading && (_jsxs("div", { className: "flex items-center gap-1 text-blue-600", children: [_jsx(RefreshCw, { className: "w-4 h-4 animate-spin" }), _jsx("span", { className: "text-sm", children: "Loading" })] })), _jsxs("div", { className: "text-sm text-gray-500", children: [state.totalCount.toLocaleString(), " total logs"] })] })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs("button", { onClick: () => onStreamToggle(!state.streaming), className: `flex items-center gap-2 px-3 py-1.5 rounded-md text-sm font-medium ${state.streaming
                                    ? 'bg-red-100 text-red-700 hover:bg-red-200'
                                    : 'bg-green-100 text-green-700 hover:bg-green-200'}`, children: [state.streaming ? _jsx(Pause, { className: "w-4 h-4" }) : _jsx(Play, { className: "w-4 h-4" }), state.streaming ? 'Stop Stream' : 'Start Stream'] }), _jsxs("button", { onClick: onRefresh, disabled: state.loading, className: "flex items-center gap-2 px-3 py-1.5 rounded-md text-sm font-medium bg-blue-100 text-blue-700 hover:bg-blue-200 disabled:opacity-50", children: [_jsx(RefreshCw, { className: `w-4 h-4 ${state.loading ? 'animate-spin' : ''}` }), "Refresh"] }), config.enableExport && (_jsx("div", { className: "relative", children: _jsxs("button", { onClick: () => onExport('json'), disabled: state.exportInProgress, className: "flex items-center gap-2 px-3 py-1.5 rounded-md text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200 disabled:opacity-50", children: [_jsx(Download, { className: "w-4 h-4" }), "Export"] }) }))] })] }), state.error && (_jsxs("div", { className: "mt-4 p-3 bg-red-50 border border-red-200 rounded-md", children: [_jsxs("div", { className: "flex items-center gap-2 text-red-800", children: [_jsx(AlertCircle, { className: "w-4 h-4" }), _jsx("span", { className: "text-sm font-medium", children: "Error" })] }), _jsx("p", { className: "mt-1 text-sm text-red-700", children: state.error }), _jsx("button", { onClick: () => onError(null), className: "mt-2 text-sm text-red-600 hover:text-red-800", children: "Dismiss" })] }))] }));
};
//# sourceMappingURL=LogsViewerHeader.js.map